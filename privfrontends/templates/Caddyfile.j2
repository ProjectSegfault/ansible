{
	log {
		output discard
	}
}

(tor) {
        header {
                -Strict-Transport-Security
                -Referrer-Policy
                -X-XSS-Protection
                -Content-Security-Policy
                # disable clients from sniffing the media type
                X-Content-Type-Options nosniff
				Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), fullscreen=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), screen-wake-lock=(), serial=(), usb=(), sync-xhr=(), xr-spatial-tracking=()";

                # clickjacking protection
                X-Frame-Options SAMEORIGIN
                Onion-Location http://{args[0]}.pjsfkvpxlinjamtawaksbnnaqs2fc2mtvmozrzckxh7f3kis6yea25ad.onion{path}
                defer
        }
}
(torloc) {
        header Onion-Location http://{args[0]}.pjsfkvpxlinjamtawaksbnnaqs2fc2mtvmozrzckxh7f3kis6yea25ad.onion{path}
}
(i2ploc) {
        header X-I2P-Location http://{args[0]}{path}
}
(acmedns) {
	tls {
        dns rfc2136 {
                key_name "dynupd"
                key_alg "hmac-sha256"
                key "{{ rfc2136_key }}"
                server "107.189.12.96:53"
        }
	}
}
(def) {
        header {
                # disable FLoC tracking
				Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), fullscreen=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), screen-wake-lock=(), serial=(), usb=(), sync-xhr=(), xr-spatial-tracking=()";

                # enable HSTS
                Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
                # disable clients from sniffing the media type
                X-Content-Type-Options nosniff

                # clickjacking protection
                X-Frame-Options SAMEORIGIN

                X-XSS-Protection "1; mode=block"
                defer
        }
        
		{% if inventory_hostname == 'in' %}
        import acmedns
		{% endif %}
}

import ./*.Caddyfile

{{ inventory_hostname }}.projectsegfau.lt {% if inventory_hostname == 'eu' %} pizza1.projectsegfau.lt {% endif %} {% if inventory_hostname == 'core' %} soleil.projectsegfau.lt {% endif %} {
        redir https://wiki.projectsegfau.lt/index.php?title={{ wiki_page }}
}
# PIZZA + US + IN
{% if inventory_hostname == 'eu' or inventory_hostname == 'us' or inventory_hostname == 'in' %}
cdn.projectsegfau.lt cdn.{{ server_prefix }}.projectsegfau.lt {
        encode zstd gzip
        root * /var/cdn
        file_server {
                browse
        }
}
lbry.{{ server_prefix }}.projectsegfau.lt lbry.projectsegfau.lt {
        reverse_proxy :3550
        import def
		import torloc lbry
        import i2ploc pjsf7uucpqf2crcmfo3nvwdmjhirxxjfyuvibdfp5x3af2ghqnaa.b32.i2p
}
nitter.{{ server_prefix }}.projectsegfau.lt nitter.projectsegfau.lt n.psf.lt n.{{ server_prefix }}.psf.lt {
        import def
		import banips
        log {
                # This is temporarily required to monitor nitter traffic due to scrapers being more active, so we need to monitor and rate limit them at a later date.
                        output file /var/log/caddy/nitter.log
                        format json
                }
        header {
                X-Permitted-Cross-Domain-Policies none
                Permissions-Policy "Permissions-Policy: accelerometer=(), ambient-light-sensor=(), autoplay=(self), battery=(), camera=(), cross-origin-isolated=(), display-capture=(), document-domain=(), encrypted-media=(), execution-while-not-rendered=(), execution-while-out-of-viewport=(), fullscreen=(self), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), navigation-override=(), payment=(), picture-in-picture=(self), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(), usb=(), web-share=(), xr-spatial-tracking=()"
                header Content-Security-Policy "default-src 'none'; script-src 'self' 'unsafe-inline'; script-src-attr 'none'; img-src 'self'; style-src 'self' 'unsafe-inline'; style-src-elem 'self'; font-src 'self'; object-src 'none'; media-src 'self' blob:; worker-src 'self' blob:; base-uri 'self'; form-action 'self'; frame-ancestors 'self'; connect-src 'self' https://*.twimg.com; manifest-src 'self'"
        }
        reverse_proxy :8387 {
                transport http {
                        compression off
                }
        }
		import torloc nitter
		import i2ploc pjsfs4ukb6prmfx3qx3a5ef2cpcupkvcrxdh72kqn2rxc2cw4nka.b32.i2p
}
libreddit.{{ server_prefix }}.projectsegfau.lt libreddit.projectsegfau.lt lr.psf.lt lr.{{ server_prefix }}.psf.lt {
        reverse_proxy :6464
        import def
		import torloc libreddit
		import i2ploc pjsfkref7g66mji45kyccqnn5hmjtjp3cfodozabpyplj2rmv5sa.b32.i2p
}
teddit.{{ server_prefix }}.projectsegfau.lt teddit.projectsegfau.lt t.psf.lt t.{{ server_prefix }}.psf.lt {
        reverse_proxy :9061
        import def
		import torloc teddit
}
{% endif %}
# SOLEIL + US + IN 
{% if inventory_hostname == 'core' or inventory_hostname == 'us' or inventory_hostname == 'in' %}
inv.{{ server_prefix }}.projectsegfau.lt inv.projectsegfau.lt invidious.projectsegfau.lt i.{{ server_prefix }}.psf.lt i.psf.lt {
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:7573
        header {
                # disable FLoC tracking
				Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), fullscreen=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), screen-wake-lock=(), serial=(), usb=(), sync-xhr=(), xr-spatial-tracking=()";

                # enable HSTS
                Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
                # disable clients from sniffing the media type
                X-Content-Type-Options nosniff

                # keep referrer data off of HTTP connections
                Referrer-Policy no-referrer-when-downgrade
				-Content-Security-Policy

                X-XSS-Protection "1; mode=block"
                defer
        }
		@badbots {
        	header "User-Agent" "Go-http-client/2.0"
		}
        respond @badbots "Access to this route denied" 403
		import torloc inv
		{% if server_prefix == 'in' %}
        import acmedns
		{% endif %}
}
gothub.{{ server_prefix }}.projectsegfau.lt gothub.projectsegfau.lt gh.psf.lt gh.{{ server_prefix }}.psf.lt {
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:1024
        import def
		import torloc gothub
}
overflow.{{ server_prefix }}.projectsegfau.lt overflow.projectsegfau.lt o.psf.lt o.{{ server_prefix }}.psf.lt {
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:8694
        import def
		import torloc overflow
}
rimgo.{{ server_prefix }}.projectsegfau.lt rimgo.projectsegfau.lt rg.psf.lt rg.{{ server_prefix }}.psf.lt {
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:9016
        import def
		import torloc rimgo
}
bw.{{ server_prefix }}.projectsegfau.lt bw.projectsegfau.lt bw.psf.lt bw.{{ server_prefix }}.psf.lt {
        import def
		import torloc breezewiki
		import i2ploc pjsfk4xvekoc7wx4pteevp3q2wy7jmzlem7rvl74nx33zkdr4vyq.b32.i2p
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:10416
}
scribe.{{ server_prefix }}.projectsegfau.lt scribe.projectsegfau.lt sc.psf.lt sc.{{ server_prefix }}.psf.lt {
        import def
		import torloc scribe
        import i2ploc pjsflkkkcn33ahmzmpyq6idy2knkzh4atp7zaetqfsnenpyori6a.b32.i2p
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:8006
}
translate.{{ server_prefix }}.projectsegfau.lt translate.projectsegfau.lt tl.psf.lt tl.{{ server_prefix }}.psf.lt {
	import def
	reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:5046
	import torloc translate
}
safetwitch.{{ server_prefix }}.projectsegfau.lt safetwitch.projectsegfau.lt tw.psf.lt tw.{{ server_prefix }}.psf.lt {
	import def
	reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:5070
	import torloc safetwitch
}
api.safetwitch.{{ server_prefix }}.projectsegfau.lt {
	reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:5071
}
hyperpipe.{{ server_prefix }}.projectsegfau.lt hyperpipe.projectsegfau.lt hp.psf.lt hp.{{ server_prefix }}.psf.lt {
	import def
	reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:8843
}
hyperpipebackend.{{ server_prefix }}.projectsegfau.lt {
	reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:3536
}
search.{{ server_prefix }}.projectsegfau.lt search.projectsegfau.lt s.psf.lt s.{{ server_prefix }}.psf.lt {
        import def
		import torloc search
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:8081
        @api {
                path /config
                path /healthz
                path /stats/errors
                path /stats/checker
        }
        @static {
                path /static/*
        }
        @notstatic {
                not path /static/*
        }
        @imageproxy {
                path /image_proxy
        }
        @notimageproxy {
                not path /image_proxy
        }
        header {
                # Enable HTTP Strict Transport Security (HSTS) to force clients to always connect via HTTPS
                Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
                # Enable cross-site filter (XSS) and tell browser to block detected attacks
                X-XSS-Protection "1; mode=block"
                # Prevent some browsers from MIME-sniffing a response away from the declared Content-Type
                X-Content-Type-Options "nosniff"
                # Disable some features
                Permissions-Policy "accelerometer=(),ambient-light-sensor=(),autoplay=(),camera=(),encrypted-media=(),focus-without-user-activation=(),geolocation=(),gyroscope=(),magnetometer=(),microphone=(),midi=(),payment=(),picture-in-picture=(),speaker=(),sync-xhr=(),usb=(),vr=()"
                # Disable some features (legacy)
                Feature-Policy "accelerometer 'none';ambient-light-sensor 'none'; autoplay 'none';camera 'none';encrypted-media 'none';focus-without-user-activation 'none'; geolocation 'none';gyroscope 'none';magnetometer 'none';microphone 'none';midi 'none';payment 'none';picture-in-picture 'none'; speaker 'none';sync-xhr 'none';usb 'none';vr 'none'"
                # Referer
                Referrer-Policy "no-referrer"
                # X-Robots-Tag
                X-Robots-Tag "noindex, noarchive, nofollow"
                # Remove Server header
                -Server
        }
        header @api {
                Access-Control-Allow-Methods "GET, OPTIONS"
                Access-Control-Allow-Origin "*"
        }
        # Cache
        header @static {
                # Cache
                Cache-Control "public, max-age=31536000"
                defer
        }
        header @notstatic {
                # No Cache
                Cache-Control "no-cache, no-store"
                Pragma "no-cache"
        }
        # CSP (see http://content-security-policy.com/ )
        header @imageproxy {
                Content-Security-Policy "default-src 'none'; img-src 'self' data:"
        }
        header @notimageproxy {
                Content-Security-Policy "upgrade-insecure-requests; default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; form-action 'self' https://github.com/searxng/searxng/issues/new; font-src 'self'; frame-ancestors 'self'; base-uri 'self'; connect-src 'self' https://overpass-api.de; img-src 'self' data: https://*.tile.openstreetmap.org; frame-src https://www.youtube-nocookie.com https://player.vimeo.com https://www.dailymotion.com https://www.deezer.com https://www.mixcloud.com https://w.soundcloud.com https://embed.spotify.com"
        }
}
{% if server_prefix == 'eu' %}piped.projectsegfau.lt proxy.piped.projectsegfau.lt api.piped.projectsegfau.lt {%else%} piped.{{ server_prefix }}.projectsegfau.lt pipedproxy.{{ server_prefix }}.projectsegfau.lt pipedapi.{{ server_prefix }}.projectsegfau.lt {%endif%} {
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:6970
        header {
                # disable FLoC tracking
				Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), fullscreen=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), screen-wake-lock=(), serial=(), usb=(), sync-xhr=(), xr-spatial-tracking=()";

                # enable HSTS
                Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
                # disable clients from sniffing the media type
                X-Content-Type-Options nosniff

                # keep referrer data off of HTTP connections
                Referrer-Policy no-referrer-when-downgrade

                X-XSS-Protection "1; mode=block"
                defer
        }
		@badbots {
        	header "User-Agent" "Go-http-client/2.0"
		}
        respond @badbots "Access to this route denied" 403
		{% if server_prefix == 'in' %}
        import acmedns
		{% endif %}
}
pi.{{ server_prefix }}.psf.lt pi.psf.lt {
        reverse_proxy {% if inventory_hostname == 'core' %}192.168.5.2{% endif %}:6970 {
                header_up Host "{% if server_prefix == 'eu' %}piped.projectsegfau.lt{%else%}piped.{{ server_prefix }}.projectsegfau.lt{%endif%}"
        }
        header {
                # disable FLoC tracking
				Permissions-Policy "accelerometer=(), ambient-light-sensor=(), autoplay=(), battery=(), camera=(), clipboard-read=(), display-capture=(), document-domain=(), encrypted-media=(), fullscreen=(), geolocation=(), gyroscope=(), hid=(), idle-detection=(), interest-cohort=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), screen-wake-lock=(), serial=(), usb=(), sync-xhr=(), xr-spatial-tracking=()";

                # enable HSTS
                Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
                # disable clients from sniffing the media type
                X-Content-Type-Options nosniff

                # keep referrer data off of HTTP connections
                Referrer-Policy no-referrer-when-downgrade

                X-XSS-Protection "1; mode=block"
                defer
        }
		@badbots {
        	header "User-Agent" "Go-http-client/2.0"
		}
        respond @badbots "Access to this route denied" 403
}
{% endif %}
